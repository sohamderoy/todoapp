[{"D:\\soham\\Dev Project\\todoapp\\src\\index.js":"1","D:\\soham\\Dev Project\\todoapp\\src\\App.js":"2","D:\\soham\\Dev Project\\todoapp\\src\\reportWebVitals.js":"3","D:\\soham\\Dev Project\\todoapp\\src\\components\\Form.js":"4","D:\\soham\\Dev Project\\todoapp\\src\\components\\TodoList.js":"5","D:\\soham\\Dev Project\\todoapp\\src\\components\\Todo.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1665,"mtime":1612031069120,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":1520,"mtime":1612032658897,"results":"11","hashOfConfig":"8"},{"size":488,"mtime":1612028135042,"results":"12","hashOfConfig":"8"},{"size":882,"mtime":1612008448369,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"5sf0yk",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\soham\\Dev Project\\todoapp\\src\\index.js",[],["29","30"],"D:\\soham\\Dev Project\\todoapp\\src\\App.js",["31"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\n// Importing components\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let localTodos = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(localTodos);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>To Do List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        filteredTodos={filteredTodos}\n        setTodos={setTodos}\n        todos={todos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\soham\\Dev Project\\todoapp\\src\\reportWebVitals.js",[],"D:\\soham\\Dev Project\\todoapp\\src\\components\\Form.js",["32"],"import React from \"react\";\r\n\r\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        text: inputText,\r\n        completed: false,\r\n        id: Math.random() * 1000,\r\n      },\r\n    ]);\r\n    todos.map((todo) => {\r\n      if (todo.text === \"\") {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n      }\r\n    });\r\n    setInputText(\"\");\r\n  };\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n  return (\r\n    <form>\r\n      <div className=\"todo-input-container\">\r\n        <input\r\n          value={inputText}\r\n          onChange={inputTextHandler}\r\n          type=\"text\"\r\n          className=\"todo-input\"\r\n          placeholder=\"Enter your task\"\r\n        />\r\n        <button\r\n          onClick={submitTodoHandler}\r\n          className=\"todo-button\"\r\n          type=\"submit\"\r\n        >\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"select\">\r\n        <select\r\n          onChange={statusHandler}\r\n          name=\"todos\"\r\n          id=\"\"\r\n          className=\"filter-todo\"\r\n        >\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","D:\\soham\\Dev Project\\todoapp\\src\\components\\TodoList.js",[],"D:\\soham\\Dev Project\\todoapp\\src\\components\\Todo.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":21,"column":6,"nodeType":"39","endLine":21,"endColumn":21,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":17,"column":22,"nodeType":"43","messageId":"44","endLine":17,"endColumn":24},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["47"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"50","text":"51"},[517,532],"[todos, status, filterHandler, saveLocalTodos]"]